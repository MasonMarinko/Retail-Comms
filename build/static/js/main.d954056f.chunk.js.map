{"version":3,"sources":["Components/Item/ItemList.tsx","Stores/userStore.ts","Components/Comment/CommentList.tsx","Pages/ItemHome.tsx","Components/Nav/index.tsx","Pages/Login.tsx","Pages/Signup.tsx","App.tsx","reportWebVitals.js","index.tsx","Services/commentService.js","Services/itemService.js","Services/userService.js","Services/apiService.js"],"names":["StyledProductListItem","styled","div","ItemListLayout","addItem","removeItem","items","useState","employeeName","itemNumber","itemName","itemPrice","itemQuantity","form","setForm","firstName","lastName","department","userInfo","setUserInfo","setUserInfoState","userInformation","onFieldChange","name","e","data","target","value","onSubmit","lastInitial","charAt","preventDefault","localStorage","getItem","itemData","parseInt","parseFloat","ItemService","create","then","postResponse","console","log","item","catch","err","alert","response","message","useEffect","token","userTokenInfo","jwt","decode","loggedInfo","className","onChange","placeholder","Button","map","id","onClick","delete","onRemove","useUserStore","set","payload","setToken","state","CommentListLayout","comments","addComment","removeComment","addUserToComment","type","userStore","taskType","commentData","commentType","CommentService","comment","readBy","isTask","isCommentArray","undefined","users","user","join","markCommentRead","onRead","ItemHome","itemLists","setItemLists","commentLists","setCommentLists","getItemData","a","getAllItems","grabData","getCommentData","getAllComments","grabCommentData","itemIndex","findIndex","product","splice","push","commentID","userData","commentIndex","something","Nav","currentToken","setCurrentToken","getUser","getFirstName","to","href","window","location","assign","Login","username","password","formState","setFormState","handleChange","htmlFor","loginData","UserService","login","setItem","handleFormSubmit","Signup","submitButton","setActiveButton","firstNameField","length","lastNameField","departmentField","disabled","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","apiService","require","post","result","get","commentNumber","headers","Authorization","module","exports","getAllUsers","base","instance","baseURL"],"mappings":"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","file":"static/js/main.d954056f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Item } from \"../../types/Item\";\nimport styled from \"styled-components\";\nimport { Button } from \"semantic-ui-react\";\nimport ItemService from \"../../Services/itemService\";\nimport \"./itemList.css\";\nimport jwt from \"jsonwebtoken\";\n\nconst StyledProductListItem = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n\n  & > div {\n    padding: 10px;\n  }\n  .image-div {\n    img {\n      max-width: 150px;\n    }\n  }\n  .title-div {\n    max-width: 300px;\n  }\n  .price-div {\n  }\n  .actions-div {\n    margin-left: auto;\n    align-self: center;\n  }\n`;\n\nexport const ItemListLayout: React.FC<{\n  items: Item[];\n  addItem: (item: Partial<Item>) => void;\n  removeItem: (item: Item) => void;\n}> = ({ addItem, removeItem, items }) => {\n  const [form, setForm] = useState({\n    employeeName: \"\",\n    itemNumber: \"\",\n    itemName: \"\",\n    itemPrice: \"\",\n    itemQuantity: \"\",\n  });\n\n  const [userInfo, setUserInfo] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    department: \"\",\n  });\n\n  const loggedInfo = () => {\n    const token = localStorage.getItem(\"token\");\n    console.log(form);\n\n    if (!token) {\n      return;\n    }\n    {\n      const userTokenInfo = jwt.decode(token);\n      setUserInfoState(userTokenInfo);\n    }\n  };\n\n  const setUserInfoState = (userInformation: any) => {\n    setUserInfo({\n      firstName: userInformation.firstName,\n      lastName: userInformation.lastName,\n      department: userInformation.department,\n    });\n  };\n\n  const clearForm = () => {\n    const formReset = {\n      employeeName: \"\",\n      itemNumber: \"\",\n      itemName: \"\",\n      itemPrice: \"\",\n      itemQuantity: \"\",\n    };\n    setForm(formReset);\n  };\n\n  const onFieldChange = (\n    name: keyof typeof form,\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const data = { ...form };\n    data[name] = e.target.value as string;\n    setForm(data);\n  };\n\n  const onRemove = (item: Item) => {\n\n    ItemService.delete(item.itemNumber)\n      .then((postResponse: any) => {\n        removeItem(item);\n      })\n      .catch((err: any) => {\n        alert(\"testing\");\n      });\n  };\n\n  const loggedIn = () => {\n    const token = localStorage.getItem(\"token\");\n    return !!token;\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    const lastName = userInfo.lastName;\n    const lastInitial = lastName.charAt(0);\n    e.preventDefault();\n    if (!loggedIn()) {\n      alert(\"You must be logged in to perform this action!\");\n      return;\n    }\n    {\n      const itemData: Partial<Item> = {\n        employeeName: userInfo.firstName + \" \" + lastInitial,\n        itemNumber: parseInt(form.itemNumber),\n        itemName: form.itemName,\n        itemPrice: parseFloat(form.itemPrice),\n        itemQuantity: parseInt(form.itemQuantity),\n      };\n\n      ItemService.create(itemData)\n        .then((postResponse: any) => {\n          console.log(postResponse.item);\n          addItem(postResponse.item);\n        })\n        .catch((err: any) => {\n          alert(err.response.data.message);\n        });\n    }\n    clearForm();\n  };\n\n  useEffect(() => {\n    loggedInfo();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"actions-div\">\n        <form\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => onSubmit(e)}\n          className=\"form-format\"\n        >\n          <input\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              onFieldChange(\"itemNumber\", e)\n            }\n            className=\"info-input\"\n            placeholder=\"Item Number\"\n            value={form.itemNumber}\n          ></input>\n          <br></br>\n          <input\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              onFieldChange(\"itemName\", e)\n            }\n            className=\"info-input\"\n            placeholder=\"Item Name\"\n            value={form.itemName}\n          ></input>\n          <br></br>\n          <input\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              onFieldChange(\"itemPrice\", e)\n            }\n            className=\"info-input\"\n            placeholder=\"Item Price\"\n            value={form.itemPrice}\n          ></input>\n          <br></br>\n          <input\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              onFieldChange(\"itemQuantity\", e)\n            }\n            className=\"info-input\"\n            placeholder=\"Item Quantity\"\n            value={form.itemQuantity}\n          ></input>\n          <br></br>\n          <Button>Submit</Button>\n        </form>\n      </div>\n      {items.map((item) => {\n        return (\n          <StyledProductListItem\n            className=\"product-list-item\"\n            key={item.itemNumber}\n          >\n            <div className=\"item-info-box\">\n              <div className=\"employeeName-div\">\n                <h2 className=\"item-headers\">Employee Name:</h2>\n                <h3 className=\"item-info\" id=\"employeeName\">\n                  {item.employeeName}\n                </h3>\n              </div>\n              <div className=\"itemNumber-div\">\n                <h2 className=\"item-headers\">Item Number:</h2>\n                <h3 className=\"item-info\" id=\"itemNumber\">\n                  {item.itemNumber}\n                </h3>\n              </div>\n              <div className=\"title-div\">\n                <h2 className=\"item-headers\">Item Name:</h2>\n                <h3 className=\"item-info\">{item.itemName}</h3>\n              </div>\n              <div className=\"price-div\">\n                <h2 className=\"item-headers\">Price:</h2>\n                <h3 className=\"item-info\">${item.itemPrice}</h3>\n              </div>\n              <div className=\"quantity-div\">\n                <h2 className=\"item-headers\">Quantity:</h2>\n                <h3 className=\"item-info-bottom\">{item.itemQuantity}</h3>\n              </div>\n              {/* <Button>EDIT</Button> */}\n              <Button onClick={() => onRemove(item)}>REMOVE</Button>\n            </div>\n          </StyledProductListItem>\n        );\n      })}\n    </div>\n  );\n};\n","import create from 'zustand'\r\nimport jwt from \"jsonwebtoken\"\r\n\r\ninterface UserState {\r\n  token:string | null,\r\n  payload: {\r\n    id: string\r\n    firstName: string\r\n    lastName: string\r\n    department: string\r\n    exp:number\r\n  } | null, \r\n  setToken:(token:string) => void,\r\n}\r\n\r\nconst useUserStore = create<UserState>(set => ({\r\n  token: null,\r\n  payload: null,\r\n  setToken: (token) => set(state => {\r\n      state.token = token\r\n      state.payload = jwt.decode(token) as UserState[\"payload\"]\r\n  }),\r\n}))\r\n\r\nexport default useUserStore","import React, { useState, useEffect } from \"react\";\r\nimport { Item } from \"../../types/Item\";\r\nimport { Comment } from \"../../types/Comment\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"./commentList.css\";\r\nimport CommentService from \"../../Services/commentService\";\r\nimport useUserStore from \"../../Stores/userStore\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { User } from '../../types/User'\r\nimport { userInfo } from \"node:os\";\r\n\r\n\r\nconst StyledProductListItem = styled.div`\r\n  display: flex;\r\n\r\n  & > div {\r\n    padding: 10px;\r\n  }\r\n  .image-div {\r\n    img {\r\n      max-width: 150px;\r\n    }\r\n  }\r\n  .title-div {\r\n    max-width: 300px;\r\n  }\r\n  .price-div {\r\n  }\r\n\r\n  .actions-div {\r\n    margin-left: auto;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nexport const CommentListLayout: React.FC<{\r\n  comments: Comment[];\r\n  addComment: (comment: Partial<Comment>) => void;\r\n  removeComment: (comment: Comment) => void;\r\n  addUserToComment: (commentID: string, userData: Partial<User>) => void;\r\n}> = ({ comments, addComment, removeComment, addUserToComment }) => {\r\n  const [form, setForm] = useState({\r\n    type: \"task\",\r\n    employeeName: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [readByNames, setReadByNames] = useState([\"\"]);\r\n\r\n  const userStore = useUserStore();\r\n  \r\n  // const loggedInfo = () => {\r\n    //   const token = localStorage.getItem(\"token\");\r\n    //   console.log(form);\r\n    \r\n    //   if (!token) {\r\n      //     return;\r\n      //   }\r\n      //   {\r\n        //     const userTokenInfo = jwt.decode(token);\r\n        //     setUserInfoState(userTokenInfo);\r\n        //   }\r\n        // };\r\n        \r\n        // const setUserInfoState = (userInformation: any) => {\r\n          //   setUserInfo({\r\n            //     firstName: userInformation.firstName,\r\n            //     lastName: userInformation.lastName,\r\n            //     department: userInformation.department,\r\n            //   });\r\n            // };\r\n            \r\n            // const loggedIn = () => {\r\n              //   const token = localStorage.getItem(\"token\");\r\n              //   return !!token;\r\n              // };\r\n              \r\n  const clearForm = (commentType:any) => {\r\n    const formReset = {\r\n      type: commentType,\r\n      employeeName: \"\",\r\n      message: \"\",\r\n      readBy: \"\"\r\n    };\r\n    setForm(formReset);\r\n  };\r\n\r\n  console.log(\"working\")\r\n\r\n  const onFieldChange = (\r\n    name: keyof typeof form,\r\n    e:\r\n      | React.ChangeEvent<HTMLInputElement>\r\n      | React.ChangeEvent<HTMLTextAreaElement>\r\n      | React.ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    const data = { ...form };\r\n    data[name] = e.target.value as string;\r\n    setForm(data);\r\n  };\r\n\r\n  const onRead = (e: React.ChangeEvent<HTMLButtonElement>, comment:any) => {\r\n    e.preventDefault()\r\n    console.log(userStore.payload)\r\n    // const commentData: Partial<Comment> = {\r\n    //   commentType: form.type,\r\n    //   employeeName: userStore.payload.firstName + \" \" + lastInitial,\r\n    //   message: form.message\r\n    // };\r\n  \r\n        CommentService.markCommentRead(comment.id, userStore.token)\r\n        .then((postResponse: any) => {\r\n            console.log(postResponse.comment);\r\n            addUserToComment(comment.id, {\r\n              id: userStore.payload?.id,\r\n              firstName: userStore.payload?.firstName,\r\n              lastName: userStore.payload?.lastName\r\n            })\r\n          })\r\n          .catch((err: any) => {\r\n            alert(err);\r\n          });\r\n  }\r\n\r\n  const onRemove = (comment: Comment) => {\r\n    console.log(comment)\r\n    CommentService.delete(comment.id)\r\n      .then((postResponse: any) => {\r\n        removeComment(comment);\r\n      })\r\n      .catch((err: any) => {\r\n        alert(\"testing\");\r\n      });\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!userStore.payload) {\r\n      alert(\"You must be logged in to perform this action!\");\r\n      return;\r\n    }\r\n    const taskType = form.type\r\n    console.log(taskType)\r\n    const lastName = userStore.payload.lastName;\r\n    const lastInitial = lastName.charAt(0);\r\n    {\r\n      const commentData: Partial<Comment> = {\r\n        commentType: form.type,\r\n        employeeName: userStore.payload.firstName + \" \" + lastInitial,\r\n        message: form.message\r\n      };\r\n\r\n      CommentService.create(commentData)\r\n        .then((postResponse: any) => {\r\n          console.log(postResponse.comment);\r\n          addComment(postResponse.comment);\r\n        })\r\n        .catch((err: any) => {\r\n          alert(err);\r\n        });\r\n    }\r\n    clearForm(taskType);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) {\r\n      userStore.setToken(token)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"form-comment-container\">\r\n      <div className=\"form-div-comments\">\r\n        <form\r\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => onSubmit(e)}\r\n          className=\"form-comments-format\"\r\n        >\r\n          <select\r\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\r\n              onFieldChange(\"type\", e)\r\n            }\r\n            name=\"selectList\"\r\n            id=\"selectList\"\r\n          >\r\n              <option value=\"task\">Task</option>\r\n            <option value=\"memo\">Memo</option>\r\n          </select>\r\n          <br></br>\r\n          <br></br>\r\n          <textarea\r\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n              onFieldChange(\"message\", e)\r\n            }\r\n            className=\"comment-box\"\r\n            placeholder=\"Comment Here\"\r\n            value={form.message}\r\n          ></textarea>\r\n          <br></br>\r\n          <Button onClick={() => addComment} className=\"comment-submit-button\">\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      {comments.map((comment) => {\r\n        const isTask = comment.commentType == \"task\";\r\n        const isCommentArray = comment.users == undefined;\r\n        return (\r\n          <StyledProductListItem\r\n            className=\"product-list-item-comment\"\r\n            key={comment.id}\r\n          >\r\n            <div className=\"employee-name-info\">\r\n              <h2 className=\"item-headers-comments\">Posted By:</h2>\r\n              <h3 className=\"item-info-comments\" id=\"employeeName\">\r\n                {comment.employeeName}\r\n              </h3>\r\n            </div>\r\n            <div className=\"item-info-box-comments\">\r\n              <div className=\"message-info\">\r\n                <h2 className=\"item-headers-comments\">Message:</h2>\r\n                <h3 className=\"item-info-bottom-comments\" id=\"commentMessage\">\r\n                  {comment.message}\r\n                </h3>\r\n              </div>\r\n              <br></br>\r\n                {isTask ? (\r\n                  <>\r\n                  <div className=\"comment-adjust-buttons\">\r\n                  <Button onClick={() => onRemove(comment)}>COMPLETED</Button>\r\n                  </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                  <div className=\"read-button-flex\">\r\n                    <div className=\"read-by-align\">\r\n                      <h1 className=\"read-by-text\">Read By: {isCommentArray ? (<></>\r\n                      ) : (\r\n                        <>\r\n                        {comment.users.map((user) => {\r\n                          return user.firstName + \" \" + user.lastName\r\n                      }).join(\", \")} \r\n                      </>\r\n                      )}\r\n                      </h1>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className= \"read-button\">\r\n                  <div className=\"comment-adjust-buttons\">\r\n                    <Button onClick={(e: any) => onRead(e, comment)}>READ</Button>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n          </StyledProductListItem>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\"\nimport ItemService from \"../Services/itemService\";\nimport CommentService from \"../Services/commentService\";\nimport { ItemListLayout } from \"../Components/Item/ItemList\"\nimport { CommentListLayout } from \"../Components/Comment/CommentList\"\nimport { Item } from \"../types/Item\"\nimport { Comment } from \"../types/Comment\"\nimport { User } from '../types/User'\n\n\nexport const ItemHome: React.FC = () => {\n    const [itemLists, setItemLists] = useState<Item[]>([])\n    const [commentLists, setCommentLists]= useState<Comment[]>([])\n    \n\n    const getItemData = async () => {\n        const grabData = await ItemService.getAllItems()\n        const itemData = grabData?.items\n        setItemLists(itemData)\n    }\n\n    const getCommentData = async () => {\n        const grabCommentData = await CommentService.getAllComments()\n        const commentData = grabCommentData?.comments\n        setCommentLists(commentData)\n    }\n\n    const addUserToComment = (commentID: string, userData: Partial<User>) => {\n        const commentIndex = commentLists.findIndex((comment) => {\n            return commentID == comment.id  \n        })\n        const comments = [...commentLists]\n        comments[commentIndex].users.push(userData)\n        setCommentLists(comments)\n    }\n    \n    useEffect(() => {\n        getItemData();\n        getCommentData();\n      }, []);\n\n    //====== Add Items to itemList Object ======//\n    const addItem = (item:Partial<Item>) => {\n        const items = [...itemLists]\n        items.push(item as Item)\n        setItemLists(items)\n    }\n\n\n    \n    //====== Remove Items from itemList Object ======//\n    const removeItem = (item:Item) => {\n        const itemIndex = itemLists.findIndex(product => product.itemNumber == item.itemNumber)\n        itemLists.splice(itemIndex, 1)\n        const items = [...itemLists]\n        setItemLists(items)\n    }\n    \n    //====== Add Comment to commentList ===========//\n    const addComment = (comment:Partial<Comment>) => {\n        const comments = [...commentLists]\n        comments.push(comment as Comment)\n        setCommentLists(comments)\n    }\n\n    //======= Remove Comment from commentList ======//\n    const removeComment = (comment:Comment) => {\n        const commentIndex = commentLists.findIndex(something => something.id == comment.id)\n        commentLists.splice(commentIndex, 1)\n        const items = [...commentLists]\n        setCommentLists(items)\n    }\n    \n\n\n    return <div className=\"cart-page\">\n            <h1 className=\"title-text\" >Add Items To List</h1>\n            <div>\n                    <ItemListLayout items={itemLists} removeItem={removeItem}  addItem={addItem} />\n            </div>\n                <h1 className=\"title-text\">Add Comments</h1>\n            <div>\n                    <CommentListLayout comments={commentLists} addUserToComment={addUserToComment} removeComment={removeComment} addComment={addComment} />\n            </div>\n    </div>\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useUserStore from \"../../Stores/userStore\";\r\nimport jwt from \"jsonwebtoken\"\r\n\r\n\r\nfunction Nav() {\r\n  const userStore = useUserStore()\r\n  const [currentToken, setCurrentToken] = useState(\"\")\r\n\r\n  const setToken = () => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (!token) {\r\n      return\r\n    } {\r\n      setCurrentToken(token)\r\n    }\r\n    }\r\n\r\n  const getUser = () => {\r\n    const token = currentToken\r\n    const userTokenInfo = jwt.decode(token)\r\n    if (!userTokenInfo) {\r\n      return\r\n    } {\r\n      return getFirstName(userTokenInfo)\r\n    }\r\n  }\r\n\r\n  const logout = () =>  {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n  \r\n  const getFirstName = (userInfo:any) => {\r\n    const firstName = userInfo.firstName\r\n    return firstName\r\n  }\r\n\r\n  const loggedIn = () => {\r\n    const token = localStorage.getItem(\"token\")\r\n    return !!token\r\n  }\r\n\r\n  // console.log(userName)\r\n\r\n  useEffect(() => {\r\n    setToken()\r\n  },[])\r\n  \r\n  function showNavigation() {\r\n    if (loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n        <li>Welcome {getUser()} </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li>Welcome {getUser()} </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/Signup\">Signup</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/Login\">Login</Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n  }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          Costco Wholesale\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>\r\n        {showNavigation()}\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserService from \"../Services/userService\";\r\nimport useUserStore from \"../Stores/userStore\";\r\n\r\nexport const Login: React.FC = () => {\r\n  const [formState, setFormState] = useState({ username: \"\", password: \"\" });\r\n  const userStore = useUserStore()\r\n  \r\n  useEffect(() => {\r\n    console.log(\"token is \" + userStore.token)\r\n    console.log(\"payload is \" , userStore.payload)\r\n  },[userStore.token])\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) {\r\n      userStore.setToken(token)\r\n    }\r\n  }, [])\r\n\r\n const handleFormSubmit = (e:React.FormEvent<HTMLFormElement>) => {\r\n   e.preventDefault()\r\n   const loginData = {\r\n     username: formState.username,\r\n     password: formState.password\r\n   }\r\n\r\n   UserService.login(loginData)\r\n   .then((postResponse: any) => {\r\n     e.preventDefault();\r\n     userStore.setToken(postResponse.token)\r\n     localStorage.setItem(\"token\",postResponse.token)\r\n     window.location.assign('/');\r\n   })\r\n   .catch((err: any) => {\r\n     alert(err.response.data.message);\r\n   });\r\n }\r\n \r\n  const handleChange = (name:keyof typeof formState, e:React.ChangeEvent<HTMLInputElement>) => {\r\n    const data = {...formState};\r\n    data[name] = e.target.value\r\n    setFormState(data)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      {/* <Link to=\"/signup\">\r\n        ← Go to Signup\r\n      </Link> */}\r\n\r\n      <h2>Login</h2>\r\n      <form>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            name=\"username\"\r\n            type=\"username\"\r\n            id=\"username\"\r\n            onChange={(e) => handleChange(\"username\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={(e) => handleChange(\"password\", e)}\r\n          />\r\n        </div>\r\n        {/* {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null} */}\r\n        <div className=\"flex-row flex-end\">\r\n          <button\r\n          onClick={(e: any) => handleFormSubmit(e)} \r\n          type=\"submit\"\r\n          >\r\n          Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserService from \"../Services/userService\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nexport const Signup: React.FC = () => {\r\n  const [form, setForm] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    department: \"\",\r\n  });\r\n  const [submitButton, setActiveButton] = useState(true);\r\n\r\n\r\n  const onFieldChange = (\r\n    name: keyof typeof form,\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const data = { ...form };\r\n    data[name] = e.target.value;\r\n    const firstNameField = data.firstName.length;\r\n    const lastNameField = data.lastName.length;\r\n    const departmentField = data.department.length;\r\n    if (firstNameField > 1 && lastNameField > 1 && departmentField > 1) {\r\n      setActiveButton(false);\r\n    } else {\r\n      setActiveButton(true);\r\n    }\r\n    setForm(data);\r\n  };\r\n  \r\n\r\n  // const departmentValue = (e:any) => {\r\n  //   console.log(typeof(e.value))\r\n  // }\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    const userData = {\r\n      firstName: form.firstName,\r\n      lastName: form.lastName,\r\n      password: form.password,\r\n      username: form.username,\r\n      department: form.department,\r\n    };\r\n\r\n    UserService.create(userData)\r\n      .then((postResponse: any) => {\r\n        e.preventDefault();\r\n        alert(\"Account Created\");\r\n        console.log(postResponse);\r\n\r\n      })\r\n      .catch((err: any) => {\r\n        alert(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const options = [\r\n    { value: \"sales\", label: \"Sales\" },\r\n    { value: \"morningMerch\", label: \"Morning Merch\" },\r\n    { value: \"nightMerch\", label: \"Night Merch\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/Login\">← Go to Login</Link>\r\n\r\n      <h2>Signup </h2>\r\n      <form>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={(e) => onFieldChange(\"firstName\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={(e) => onFieldChange(\"lastName\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            type=\"username\"\r\n            id=\"username\"\r\n            onChange={(e) => onFieldChange(\"username\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={(e) => onFieldChange(\"password\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"department\">Department:</label>\r\n          {/* <Select\r\n            options={options}\r\n            name=\"department\"\r\n            type=\"department\"\r\n            id=\"department\"\r\n            onChange={(e) => departmentValue(e)}\r\n          /> */}\r\n          <input\r\n            placeholder=\"Department\"\r\n            name=\"department\"\r\n            type=\"department\"\r\n            id=\"department\"\r\n            onChange={(e) => onFieldChange(\"department\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button\r\n            value=\"submit\"\r\n            disabled={submitButton}\r\n            onClick={(e: any) => onSubmit(e)}\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {ItemHome} from \"./Pages/ItemHome\";\nimport Nav from './Components/Nav';\nimport {Login} from \"./Pages/Login\";\nimport {Signup} from \"./Pages/Signup\"\n\nconst App: React.FC = () => {\n    return (\n        <Router>\n        <div className=\"App\">\n            <Nav/>\n            <Switch>\n            <Route exact path=\"/\" component={ItemHome} />\n              <Route exact path=\"/Login\" component={Login} />\n              <Route exact path=\"/Signup\" component={Signup} />\n              {/* <Route exact path=\"/products/:id\" component={Detail} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/admin\" component={Admin} />\n              <Route component={NoMatch} /> */}\n            </Switch>\n        </div>\n        </Router>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./index.scss\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","const apiService = require('./apiService');\r\n\r\nconst CommentService = {\r\n    create:(data) => {\r\n       return apiService.post(\"/comment\", data)\r\n       .then(result => result.data)\r\n    },\r\n    getAllComments:(data) => {\r\n        return apiService.get('/comment', data)\r\n        .then (result => result.data)\r\n    },\r\n    delete:(commentNumber) => {\r\n        console.log(commentNumber)\r\n        return apiService.delete(`/comment/${commentNumber}`)\r\n        .then (result=>result.data)\r\n    },\r\n    markCommentRead:(commentID, token) => {\r\n        return apiService.post(`/comment/read/${commentID}`, {}, {\r\n            headers: {Authorization: token}\r\n        })\r\n        .then ()\r\n    }\r\n    \r\n}\r\n\r\nmodule.exports = CommentService","const apiService = require('./apiService');\r\n\r\nconst ItemService = {\r\n    create:(data) => {\r\n       return apiService.post(\"/item\", data)\r\n       .then(result => result.data)\r\n    },\r\n    getAllItems:(data) => {\r\n        return apiService.get('/item', data)\r\n        .then (result => result.data)\r\n    },\r\n    delete:(itemNumber) => {\r\n        return apiService.delete(`/item/${itemNumber}`)\r\n        .then (result=>result.data)\r\n    }\r\n\r\n    //   delete item\r\n//     deleteItem({ params }, res) {\r\n//         data.findOneAndDelete({ _id: params.id })\r\n//         .then(dbItemData => {\r\n//         if (!dbItemData) {\r\n//             res.status(404).json({ message: 'No Item found with this id!' });\r\n//         return;\r\n//       }\r\n//       res.json(dbItemData);\r\n//     })\r\n//     .catch(err => res.status(400).json(err));\r\n// }\r\n    \r\n}\r\n\r\nmodule.exports = ItemService","const apiService = require('./apiService');\r\n\r\nconst UserService = {\r\n    create:(data) => {\r\n       return apiService.post(\"/user\", data)\r\n       .then(result => result.data)\r\n    },\r\n    getAllUsers:(data) => {\r\n        return apiService.get('/user', data)\r\n        .then (result => result.data)\r\n    },\r\n    login:(data) => {\r\n        return apiService.post('/user/login', data)\r\n        .then(result=>result.data)\r\n    }\r\n    // delete:(itemNumber) => {\r\n    //     console.log(itemNumber)\r\n    //     return apiService.delete(`/item/${itemNumber}`)\r\n    //     .then (result=>result.data)\r\n    // }\r\n\r\n    //   delete item\r\n//     deleteItem({ params }, res) {\r\n//         data.findOneAndDelete({ _id: params.id })\r\n//         .then(dbItemData => {\r\n//         if (!dbItemData) {\r\n//             res.status(404).json({ message: 'No Item found with this id!' });\r\n//         return;\r\n//       }\r\n//       res.json(dbItemData);\r\n//     })\r\n//     .catch(err => res.status(400).json(err));\r\n// }\r\n    \r\n}\r\n\r\nmodule.exports = UserService","const axios = require('axios');\r\n\r\nlet base\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n  // dev code\r\n  base = \"http://localhost:4500\"\r\n} else {\r\n  // production code\r\n  base = \"https://www.costcoapp.com\"\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: base + '/api'\r\n  });\r\n\r\n  module.exports = instance"],"sourceRoot":""}