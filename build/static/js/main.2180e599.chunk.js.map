{"version":3,"sources":["Services/itemService.js","Services/commentService.js","Services/apiService.js","Services/userService.js","Components/Item/ItemList.tsx","Components/Comment/CommentList.tsx","Pages/ItemHome.tsx","Components/Nav/index.tsx","Pages/Login.tsx","Pages/Signup.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["apiService","require","ItemService","create","data","post","then","result","getAllItems","get","delete","itemNumber","console","log","module","exports","CommentService","getAllComments","commentNumber","base","instance","baseURL","UserService","StyledProductListItem","styled","div","ItemListLayout","addItem","removeItem","items","useState","employeeName","itemName","itemPrice","itemQuantity","form","setForm","onFieldChange","name","e","target","value","className","onSubmit","preventDefault","itemData","parseInt","parseFloat","postResponse","item","catch","err","alert","response","message","onChange","placeholder","Button","map","id","onClick","onRemove","CommentListLayout","comments","addComment","removeComment","editing","edited","setEdited","commentData","comment","onEdit","ItemHome","itemLists","setItemLists","commentLists","setCommentLists","getItemData","a","grabData","getCommentData","grabCommentData","useEffect","itemIndex","findIndex","product","splice","push","commentIndex","something","Nav","to","Login","email","password","htmlFor","type","Signup","firstName","lastName","department","submitButton","setActiveButton","firstNameField","length","lastNameField","departmentField","disabled","userData","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2180e599.chunk.js","sourcesContent":["const apiService = require('./apiService');\r\n\r\nconst ItemService = {\r\n    create:(data) => {\r\n       return apiService.post(\"/item\", data)\r\n       .then(result => result.data)\r\n    },\r\n    getAllItems:(data) => {\r\n        return apiService.get('/item', data)\r\n        .then (result => result.data)\r\n    },\r\n    delete:(itemNumber) => {\r\n        console.log(itemNumber)\r\n        return apiService.delete(`/item/${itemNumber}`)\r\n        .then (result=>result.data)\r\n    }\r\n\r\n    //   delete item\r\n//     deleteItem({ params }, res) {\r\n//         data.findOneAndDelete({ _id: params.id })\r\n//         .then(dbItemData => {\r\n//         if (!dbItemData) {\r\n//             res.status(404).json({ message: 'No Item found with this id!' });\r\n//         return;\r\n//       }\r\n//       res.json(dbItemData);\r\n//     })\r\n//     .catch(err => res.status(400).json(err));\r\n// }\r\n    \r\n}\r\n\r\nmodule.exports = ItemService","const apiService = require('./apiService');\r\n\r\nconst CommentService = {\r\n    create:(data) => {\r\n       return apiService.post(\"/comment\", data)\r\n       .then(result => result.data)\r\n    },\r\n    getAllComments:(data) => {\r\n        return apiService.get('/comment', data)\r\n        .then (result => result.data)\r\n    },\r\n    delete:(commentNumber) => {\r\n        console.log(commentNumber)\r\n        return apiService.delete(`/comment/${commentNumber}`)\r\n        .then (result=>result.data)\r\n    }\r\n    \r\n}\r\n\r\nmodule.exports = CommentService","const axios = require('axios');\r\n\r\nlet base\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n  // dev code\r\n  base = \"http://localhost:4500\"\r\n} else {\r\n  // production code\r\n  base = \"https://www.costcoapp.com\"\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: base + '/api'\r\n  });\r\n\r\n  module.exports = instance","const apiService = require('./apiService');\r\n\r\nconst UserService = {\r\n    create:(data) => {\r\n       return apiService.post(\"/user\", data)\r\n       .then(result => result.data)\r\n    }\r\n    // getAllItems:(data) => {\r\n    //     return apiService.get('/item', data)\r\n    //     .then (result => result.data)\r\n    // },\r\n    // delete:(itemNumber) => {\r\n    //     console.log(itemNumber)\r\n    //     return apiService.delete(`/item/${itemNumber}`)\r\n    //     .then (result=>result.data)\r\n    // }\r\n\r\n    //   delete item\r\n//     deleteItem({ params }, res) {\r\n//         data.findOneAndDelete({ _id: params.id })\r\n//         .then(dbItemData => {\r\n//         if (!dbItemData) {\r\n//             res.status(404).json({ message: 'No Item found with this id!' });\r\n//         return;\r\n//       }\r\n//       res.json(dbItemData);\r\n//     })\r\n//     .catch(err => res.status(400).json(err));\r\n// }\r\n    \r\n}\r\n\r\nmodule.exports = UserService","import React, { useState, useEffect } from \"react\";\nimport { Item } from \"../../types/Item\";\nimport styled from \"styled-components\";\nimport { Button } from \"semantic-ui-react\";\nimport ItemService from \"../../Services/itemService\";\nimport \"./itemList.css\";\n\nconst StyledProductListItem = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n\n  & > div {\n    padding: 10px;\n  }\n  .image-div {\n    img {\n      max-width: 150px;\n    }\n  }\n  .title-div {\n    max-width: 300px;\n  }\n  .price-div {\n  }\n  .actions-div {\n    margin-left: auto;\n    align-self: center;\n  }\n`;\n\nexport const ItemListLayout: React.FC<{\n  items: Item[];\n  addItem: (item:Partial<Item>) => void;\n  removeItem: (item:Item) => void;\n}> = ({ addItem, removeItem, items }) => {\n  \n  const [form, setForm]=useState({\n    employeeName:\"\",\n    itemNumber:\"\",\n    itemName:\"\",\n    itemPrice:\"\",\n    itemQuantity:\"\" \n  })\n\n  const onFieldChange = (name:keyof typeof form, e:React.ChangeEvent<HTMLInputElement>) => {\n    const data = {...form}\n    // console.log(data)\n    data[name] = e.target.value as string\n    setForm(data)\n  }\n\n  const onRemove = (item:Item) => {\n    console.log(item)\n\n    ItemService.delete(item.itemNumber)\n    .then((postResponse:any) => {\n      removeItem(item)\n    })\n    .catch((err:any) => {\n      alert(\"testing\")\n    });\n    // clear form\n  }\n\n\n\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const itemData:Partial<Item> = {\n      employeeName: form.employeeName,\n      itemNumber: parseInt(form.itemNumber),\n      itemName: form.itemName,\n      itemPrice: parseFloat(form.itemPrice),\n      itemQuantity: parseInt(form.itemQuantity)\n    }\n\n    \n    ItemService.create(itemData)\n    .then((postResponse:any) => {\n      console.log(postResponse.item);\n      addItem(postResponse.item)\n    })\n    .catch((err:any) => {\n      alert(err.response.data.message)\n    });\n\n    // clear form\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"actions-div\">\n        <form onSubmit={(e:React.FormEvent<HTMLFormElement>)=>onSubmit(e)} className=\"form-format\">\n        <input\n            onChange={(e:React.ChangeEvent<HTMLInputElement>)=>onFieldChange(\"employeeName\", e)}\n            className = \"info-input\"\n            placeholder=\"Your Name\"\n            value={form.employeeName}\n          ></input>\n          <br></br>\n          <input\n            onChange={(e:React.ChangeEvent<HTMLInputElement>)=>onFieldChange(\"itemNumber\", e)}\n            className = \"info-input\"\n            placeholder=\"Item Number\"\n            value={form.itemNumber}\n          ></input>\n          <br></br>\n          <input \n            onChange={(e:React.ChangeEvent<HTMLInputElement>)=>onFieldChange(\"itemName\", e)}\n            className = \"info-input\"\n            placeholder=\"Item Name\"\n            value={form.itemName}\n            ></input>\n          <br></br>\n          <input\n            onChange={(e:React.ChangeEvent<HTMLInputElement>)=>onFieldChange(\"itemPrice\", e)}\n            className = \"info-input\"\n            placeholder=\"Item Price\"\n            value={form.itemPrice}\n          ></input>\n          <br></br>\n          <input\n            onChange={(e:React.ChangeEvent<HTMLInputElement>)=>onFieldChange(\"itemQuantity\", e)}\n            className = \"info-input\"\n            placeholder=\"Item Quantity\"\n            value={form.itemQuantity}\n          ></input>\n          <br></br>\n          <Button>Submit</Button>\n        </form>\n      </div>\n      {items.map((item) => {\n        return (\n          <StyledProductListItem\n          className=\"product-list-item\"\n          key={item.itemNumber}\n          >\n            <div className=\"item-info-box\">\n            <div className=\"employeeName-div\">\n            <h2 className = \"item-headers\">Employee Name:</h2>\n                  <h3\n                  className = \"item-info\"\n                  id = \"employeeName\">\n                  {item.employeeName}\n                  </h3>\n              </div>\n              <div className=\"itemNumber-div\">\n                <h2 className = \"item-headers\">Item Number:</h2>\n                  <h3\n                  className = \"item-info\"\n                  id = \"itemNumber\">\n                  {item.itemNumber}\n                  </h3>\n              </div>\n              <div className=\"title-div\">\n              <h2 className = \"item-headers\">Item Name:</h2>\n                  <h3\n                  className = \"item-info\"\n                  >\n                  {item.itemName}\n                  </h3>\n              </div>\n              <div className=\"price-div\">\n              <h2 className = \"item-headers\">Price:</h2>\n                <h3\n                className = \"item-info\"\n                >\n                  ${item.itemPrice}\n                </h3>\n              </div>\n              <div className=\"quantity-div\">\n              <h2 className = \"item-headers\">Quantity:</h2>\n                <h3\n                className = \"item-info-bottom\"\n                >\n                {item.itemQuantity}\n                </h3>\n              </div>\n                {/* <Button>EDIT</Button> */}\n                <Button onClick={()=>onRemove(item)}>REMOVE</Button>\n            </div>\n          </StyledProductListItem>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\r\nimport { Item } from \"../../types/Item\";\r\nimport { Comment } from \"../../types/Comment\"\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"./commentList.css\";\r\nimport CommentService from \"../../Services/commentService\";\r\n\r\nconst StyledProductListItem = styled.div`\r\n  display: flex;\r\n\r\n  & > div {\r\n    padding: 10px;\r\n  }\r\n  .image-div {\r\n    img {\r\n      max-width: 150px;\r\n    }\r\n  }\r\n  .title-div {\r\n    max-width: 300px;\r\n  }\r\n  .price-div {\r\n  }\r\n\r\n  .actions-div {\r\n    margin-left: auto;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nexport const CommentListLayout: React.FC<{\r\n    comments:Comment[];\r\n    addComment: (comment:Partial<Comment>) => void;\r\n    removeComment: (comment:Comment) => void;\r\n  }> = ({ comments, addComment, removeComment }) => {\r\n    const [form, setForm]=useState({\r\n      employeeName:\"\",\r\n      message: \"\"\r\n    })\r\n\r\n    const [edited, setEdited]=useState({\r\n      id:'',\r\n      editing:false\r\n    })\r\n\r\n    const onFieldChange = (name:keyof typeof form, e:React.ChangeEvent<HTMLInputElement>|React.ChangeEvent<HTMLTextAreaElement>) => {\r\n      const data = {...form}\r\n      data[name] = e.target.value as string\r\n      setForm(data)\r\n    }\r\n\r\n    const onRemove = (comment:Comment) => {\r\n      CommentService.delete(comment.id)\r\n      .then((postResponse:any) => {\r\n        removeComment(comment)\r\n      })\r\n      .catch((err:any) => {\r\n        alert(\"testing\")\r\n      });\r\n    }\r\n    \r\n    const onEdit = (comment:Comment) => {\r\n      console.log(edited)\r\n      const data = {...comment}\r\n      \r\n      setEdited({\r\n        id:comment.id,\r\n        editing:true\r\n      })\r\n    }\r\n\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault()\r\n      const commentData:Partial<Comment> = {\r\n        employeeName: form.employeeName,\r\n        message: form.message\r\n      }\r\n      \r\n\r\n      \r\n      CommentService.create(commentData)\r\n      .then((postResponse:any) => {\r\n        console.log(postResponse.comment);\r\n        addComment(postResponse.comment)\r\n      })\r\n      .catch((err:any) => {\r\n        alert(err)\r\n      });\r\n      // clear form\r\n    }\r\n\r\n    return (\r\n      <div className=\"form-comment-container\">\r\n        <div className=\"form-div-comments\">\r\n          <form onSubmit={(e:React.FormEvent<HTMLFormElement>)=>onSubmit(e)} className = \"form-comments-format\" >\r\n          <input\r\n            onChange={(e:React.ChangeEvent<HTMLInputElement>)=>onFieldChange(\"employeeName\", e)}\r\n            className = \"info-input-comments\"\r\n            placeholder=\"Your Name\"\r\n            value={form.employeeName}\r\n          ></input>\r\n          <br></br>\r\n          <textarea \r\n            onChange={(e:React.ChangeEvent<HTMLTextAreaElement>)=>onFieldChange(\"message\", e)}\r\n            className = \"comment-box\"\r\n            placeholder=\"Comment Here\" \r\n            value={form.message}\r\n            ></textarea>\r\n          <br></br>\r\n          <Button onClick={()=>addComment} className = \"comment-submit-button\">Submit</Button>\r\n          </form>\r\n        </div>\r\n              {comments.map((comment) => {\r\n          return (\r\n          <StyledProductListItem\r\n            className=\"product-list-item-comment\"\r\n            key={comment.id}\r\n            >\r\n            <div className = \"employee-name-info\">\r\n            <h2 className = \"item-headers-comments\">Posted By:</h2>\r\n              <h3\r\n                className = \"item-info-comments\"\r\n                id = \"employeeName\">\r\n                {comment.employeeName}\r\n              </h3>\r\n              </div>\r\n          <div className=\"item-info-box-comments\">\r\n              <div className = \"message-info\">\r\n            <h2 className = \"item-headers-comments\">Message:</h2>\r\n                <h3\r\n                  className = \"item-info-bottom-comments\"\r\n                  id = \"commentMessage\">\r\n                    {comment.message}\r\n                </h3>\r\n                </div>\r\n                {edited ? (\r\n                  <>\r\n                  <input\r\n              onChange={(e:React.ChangeEvent<HTMLInputElement>)=>onFieldChange(\"employeeName\", e)}\r\n              className = \"info-input-comments\"\r\n              placeholder=\"Your Name\"\r\n            ></input>\r\n            </>\r\n                ) : (\r\n                  null\r\n                )\r\n                }\r\n          <br></br>\r\n                <div className = \"comment-adjust-buttons\">\r\n                {/* <Button>EDIT</Button> */}\r\n                <Button onClick={()=>onEdit(comment)}>COMPLETED</Button>\r\n                </div>\r\n          </div>\r\n          </StyledProductListItem>\r\n          );\r\n        })}\r\n        </div>\r\n    );\r\n  };","import React, { useState, useEffect } from \"react\"\nimport ItemService from \"../Services/itemService\";\nimport CommentService from \"../Services/commentService\";\nimport { ItemListLayout } from \"../Components/Item/ItemList\"\nimport { CommentListLayout } from \"../Components/Comment/CommentList\"\nimport { Item } from \"../types/Item\"\nimport { Comment } from \"../types/Comment\"\n\n\nexport const ItemHome: React.FC = () => {\n    const [itemLists, setItemLists] = useState<Item[]>([])\n    const [commentLists, setCommentLists]= useState<Comment[]>([])\n    \n    const getItemData = async () => {\n        const grabData = await ItemService.getAllItems()\n        const itemData = grabData?.items\n        setItemLists(itemData)\n    }\n\n    const getCommentData = async () => {\n        const grabCommentData = await CommentService.getAllComments()\n        const commentData = grabCommentData?.comments\n        setCommentLists(commentData)\n    }\n    \n    useEffect(() => {\n        getItemData();\n        getCommentData();\n      }, []);\n\n    //====== Add Items to itemList Object ======//\n    const addItem = (item:Partial<Item>) => {\n        // remove after database implementation\n        const items = [...itemLists]\n        // add to database\n        // then push response to items\n        items.push(item as Item)\n        setItemLists(items)\n    }\n\n\n    \n    //====== Remove Items from itemList Object ======//\n    const removeItem = (item:Item) => {\n        const itemIndex = itemLists.findIndex(product => product.itemNumber == item.itemNumber)\n        itemLists.splice(itemIndex, 1)\n        const items = [...itemLists]\n        setItemLists(items)\n    }\n    \n    //====== Add Comment to commentList ===========//\n    const addComment = (comment:Partial<Comment>) => {\n        // comment.id = \"340978\"\n        const comments = [...commentLists]\n        comments.push(comment as Comment)\n        setCommentLists(comments)\n    }\n\n    //======= Remove Comment from commentList ======//\n    const removeComment = (comment:Comment) => {\n        const commentIndex = commentLists.findIndex(something => something.id == comment.id)\n        commentLists.splice(commentIndex, 1)\n        const items = [...commentLists]\n        setCommentLists(items)\n    }\n    \n\n\n    return <div className=\"cart-page\">\n            <h1 className=\"title-text\" >Add Items To List</h1>\n            <div>\n                    <ItemListLayout items={itemLists} removeItem={removeItem}  addItem={addItem} />\n            </div>\n                <h1 className=\"title-text\">Add Comments</h1>\n            <div>\n                    <CommentListLayout comments={commentLists} removeComment={removeComment} addComment={addComment} />\n            </div>\n    </div>\n}","import React from \"react\";\r\n// import Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n\r\n  function showNavigation() {\r\n    // if (Auth.loggedIn()) {\r\n    //   return (\r\n    //     <ul className=\"flex-row\">\r\n    //       <li className=\"mx-1\">\r\n    //         {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n    //         <a href=\"/\" onClick={() => Auth.logout()}>\r\n    //           Logout\r\n    //         </a>\r\n    //       </li>\r\n    //       <li className=\"mx-1\">\r\n    //         <a href=\"/profile\">\r\n    //           Profile\r\n    //         </a>\r\n    //       </li>\r\n    //     </ul>\r\n    //   );\r\n    // } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/Signup\">Signup</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/Login\">Login</Link>\r\n          </li>\r\n          {/* <li className=\"mx-1\">\r\n            <Link to=\"/admin\">\r\n            Admin\r\n            </Link>\r\n          </li> */}\r\n        </ul>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          Costco Wholesale\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>\r\n        {showNavigation()}\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nexport const Login: React.FC = () => {\r\n    const [formState, setFormState] = useState({ email: '', password: '' })\r\n\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      {/* <Link to=\"/signup\">\r\n        ← Go to Signup\r\n      </Link> */}\r\n\r\n      <h2>Login</h2>\r\n      <form>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n          />\r\n        </div>\r\n        {/* {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null} */}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserService from \"../Services/userService\";\r\n\r\nexport const Signup: React.FC = () => {\r\n  const [form, setForm] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    password:\"\",\r\n    department: \"\",\r\n  });\r\n  const [submitButton, setActiveButton] = useState(true);\r\n\r\n  const handleFormSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onFieldChange = (\r\n    name: keyof typeof form,\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const data = { ...form };\r\n    data[name] = e.target.value;\r\n    const firstNameField = data.firstName.length;\r\n    const lastNameField = data.lastName.length;\r\n    const departmentField = data.department.length;\r\n    if (firstNameField > 1 && lastNameField > 1 && departmentField > 1) {\r\n      setActiveButton(false);\r\n    } else {\r\n      setActiveButton(true);\r\n    }\r\n    setForm(data);\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    const userData = {\r\n      firstName: form.firstName,\r\n      lastName: form.lastName,\r\n      password: form.password,\r\n      department: form.department,\r\n    };\r\n\r\n    UserService.create(userData)\r\n      .then((postResponse:any) => {\r\n        e.preventDefault()\r\n        alert(\"Account Created\");\r\n        console.log(postResponse);\r\n      })\r\n      .catch((err:any) => {\r\n        alert(err.response.data.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/Login\">← Go to Login</Link>\r\n\r\n      <h2>Signup </h2>\r\n      <form>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={(e) => onFieldChange(\"firstName\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={(e) => onFieldChange(\"lastName\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={(e) => onFieldChange(\"password\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"department\">Department:</label>\r\n          <input\r\n            placeholder=\"Department\"\r\n            name=\"department\"\r\n            type=\"department\"\r\n            id=\"department\"\r\n            onChange={(e) => onFieldChange(\"department\", e)}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button \r\n          value=\"submit\"\r\n          disabled={submitButton} \r\n          onClick={(e:any) => onSubmit(e)}\r\n          type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {ItemHome} from \"./Pages/ItemHome\";\nimport Nav from './Components/Nav';\nimport {Login} from \"./Pages/Login\";\nimport {Signup} from \"./Pages/Signup\"\n\nconst App: React.FC = () => {\n    return (\n        <Router>\n        <div className=\"App\">\n            <Nav/>\n            <Switch>\n            <Route exact path=\"/\" component={ItemHome} />\n              <Route exact path=\"/Login\" component={Login} />\n              <Route exact path=\"/Signup\" component={Signup} />\n              {/* <Route exact path=\"/products/:id\" component={Detail} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/admin\" component={Admin} />\n              <Route component={NoMatch} /> */}\n            </Switch>\n        </div>\n        </Router>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./index.scss\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}